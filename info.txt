
todo: YES
- ADD String 'companyImageUrl' to JobOpening class
- ADD boolean 'accepted' to Recommendation class
- ADD String 'bio' to Student and Mentor classes
- ADD String 'jobTitle' to JobOpening class

- Add /getCompany/{company-id}
- Add /getMyOpenings/{company-id}

todo: ???
- Add getCompanies/{industry}



API Endpoints:

/acceptmatch      (POST)
/declinematch     (POST)
/getmentor/{industry}/{mentor-id}
/getmentors/{industry}?limit=#&last=#
/getmymentors/{industry}?limit=#&last=#
/getmystudents/{industry}?limit=#&last=#
/getopening/{industry}/{job-opening-id}
/getopenings/{industry}?limit=#&last=#
/getpendingmatches/{industry}?limit=#&last=#





    1.  /login      (POST)
    2.  /register   (POST)
    3.  /logout     (POST)
    4.  /getmentors/{industry}/?limit=#&last=#  (GET)
    5.  /getmymentors/?limit=#&last=#   (GET)
    6.  /getmentor/{mentor-id}      (GET)
    7.  /getstudents/{industry}/?limit=#&last=#     (GET)
    8.  /getmystudents/?limit=#&last=#   (GET)
    9.  /getstudent/{student-id}     (GET)
    10. /getopenings/{industry}/?limit=#&last=#  (GET)
    11. /postOpening    (POST)
    12. /recommendStudent     (POST)
    13. /getrecommendations/{job-opening-id}/?limit=#&last=#    (GET)
    14. /requestMatch   (POST)
    15. /ismatched/{student-id}/{mentor-id}    (GET)
    16.
    17. /declineMatch/{student-id}/{mentor-id}      (POST)
    18. /getPendingMatches/?limit=#&last=#    (GET)
    19. /getopening/{industry}/{job-opening-id}        (GET)
    20. /getrecommendation/{recommendation-id}/{job-opening-id}     (GET)
21. /getmyopenings/{company-id}     (GET)


REQUIREMENT BEFORE TESTING:
X - Lambdas have DynamoDBFullAccess
X - Database is populated with correct info!!
X - Lambda functions have handler specified (lambda.MyHandler::handleRequest)
- API Endpoints have correct HTTP 500 integration response
- DEPLOY API!!


HTTP Responses:
200 - HTTP OK
400 - Incorrect Username
410 - Incorrect Password
420 - Session Expired
430 - Username Already Taken
500 - Server Error

Login Json:
{
    "username":"exampleUsername",
    "password":"examplePassword"
}

Register Json:
{
    "newUser":
    {
        "username":"exampleUsername",
        "password":"examplePassword",
        "email":"exampleEmail"
    }
}

Logout Json:
{
    "authToken":
    {
        "token":"exampleToken",
        "username":"exampleUsername"
    }
}