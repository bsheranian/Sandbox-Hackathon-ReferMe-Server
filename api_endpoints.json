{
  "swagger": "2.0",
  "info": {
    "description": "Web API for the Sandbox Hackathon.",
    "version": "2021-04-10T23:21:09Z",
    "title": "SandboxHackathon"
  },
  "host": "pji3ct6u5g.execute-api.us-west-2.amazonaws.com",
  "basePath": "/hackathon",
  "schemes": [
    "https"
  ],
  "paths": {
    "/acceptmatch": {
      "post": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "500": {
            "description": "500 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:503194767313:function:sandboxAcceptMatch/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            },
            "^\\[Server Error\\].*": {
              "statusCode": "500"
            }
          },
          "passthroughBehavior": "when_no_match",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws"
        }
      }
    },
    "/declinematch": {
      "post": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "500": {
            "description": "500 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:503194767313:function:sandboxDeclineMatch/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            },
            "^\\[Server Error\\].*": {
              "statusCode": "500"
            }
          },
          "passthroughBehavior": "when_no_match",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws"
        }
      }
    },
    "/getmentor/{industry}/{mentor-id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mentor-id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "industry",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "500": {
            "description": "500 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:503194767313:function:sandboxGetMentor/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            },
            "^\\[Server Error\\].*": {
              "statusCode": "500"
            }
          },
          "requestTemplates": {
            "application/json": "{\n    \"industry\" : \"$input.params('industry')\",\n    \"mentorId\": \"$input.params('mentor-id')\"\n}"
          },
          "passthroughBehavior": "never",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws"
        }
      }
    },
    "/getmentors/{industry}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "industry",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "Access-Control-Allow-Origin",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "Access-Control-Allow-Headers",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "last",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Access-Control-Allow-Methods",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "X-Requested-With": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          },
          "500": {
            "description": "500 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:503194767313:function:sandboxGetMentors/invocations",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'POST, GET, OPTIONS'",
                "method.response.header.X-Requested-With": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-requested-with'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            },
            "^\\[Server Error\\].*": {
              "statusCode": "500"
            }
          },
          "requestTemplates": {
            "application/json": "{\n    \"industry\" : \"$input.params('industry')\",\n    \"limit\": \"$input.params('limit')\",\n    \"last\": \"$input.params('last')\"\n}"
          },
          "passthroughBehavior": "never",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws"
        }
      },
      "options": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/getmymentors/{industry}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "last",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "industry",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response"
          },
          "500": {
            "description": "500 response"
          }
        },
        "x-amazon-apigateway-request-validator": "Validate query string parameters and headers",
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:503194767313:function:sandboxGetMyMentors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            },
            "^\\[Server Error\\].*": {
              "statusCode": "500"
            }
          },
          "requestTemplates": {
            "application/json": "{\n    \"industry\" : \"$input.params('industry')\",\n    \"limit\": \"$input.params('limit')\",\n    \"last\" : \"$input.params('last')\",\n    \"token\" : \"$input.params('Authorization')\"\n}"
          },
          "passthroughBehavior": "never",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws"
        }
      }
    },
    "/getmystudents/{industry}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "last",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "industry",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "500": {
            "description": "500 response"
          }
        },
        "x-amazon-apigateway-request-validator": "Validate query string parameters and headers",
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:503194767313:function:sandboxGetMyStudents/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            },
            "^\\[Server Error\\].*": {
              "statusCode": "500"
            }
          },
          "requestTemplates": {
            "application/json": "{\n    \"industry\" : \"$input.params('industry')\",\n    \"limit\": \"$input.params('limit')\",\n    \"last\": \"$input.params('last')\",\n    \"token\": \"$input.params('Authorization')\"\n}"
          },
          "passthroughBehavior": "never",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws"
        }
      }
    },
    "/getopening/{industry}/{job-opening-id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "job-opening-id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "industry",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "500": {
            "description": "500 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:503194767313:function:sandboxGetOpening/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            },
            "^\\[Server Error\\].*": {
              "statusCode": "500"
            }
          },
          "requestTemplates": {
            "application/json": "{\n    \"industry\" : \"$input.params('industry')\",\n    \"jobOpeningId\": \"$input.params('job-opening-id')\"\n}"
          },
          "passthroughBehavior": "never",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws"
        }
      }
    },
    "/getopenings/{industry}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "last",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "industry",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "500": {
            "description": "500 response"
          }
        },
        "x-amazon-apigateway-request-validator": "Validate query string parameters and headers",
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:503194767313:function:sandboxGetOpenings/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            },
            "^\\[Server Error\\].*": {
              "statusCode": "500"
            }
          },
          "requestTemplates": {
            "application/json": "{\n    \"industry\" : \"$input.params('industry')\",\n    \"limit\": \"$input.params('limit')\",\n    \"last\": \"$input.params('last')\"\n}"
          },
          "passthroughBehavior": "never",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws"
        }
      }
    },
    "/getpendingmatches/{industry}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "last",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "industry",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "500": {
            "description": "500 response"
          }
        },
        "x-amazon-apigateway-request-validator": "Validate body, query string parameters, and headers",
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:503194767313:function:sandboxGetPendingMatches/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            },
            "^\\[Server Error\\].*": {
              "statusCode": "500"
            }
          },
          "requestTemplates": {
            "application/json": "{ \n    \"industry\" : \"$input.params('industry')\",\n    \"limit\": \"$input.params('limit')\",\n    \"last\": \"$input.params('last')\",\n    \"token\": \"$input.params('Authorization')\"\n}"
          },
          "passthroughBehavior": "never",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws"
        }
      }
    },
    "/getrecommendation/{recommendation-id}/{job-opening-id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "recommendation-id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "job-opening-id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "500": {
            "description": "500 response"
          }
        },
        "x-amazon-apigateway-request-validator": "Validate query string parameters and headers",
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:503194767313:function:sandboxGetRecommendation/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            },
            "^\\[Server Error\\].*": {
              "statusCode": "500"
            }
          },
          "requestTemplates": {
            "application/json": "{\n    \"recommendationId\" : \"$input.params('recommendation-id')\",\n    \"jobOpeningId\": \"$input.params('job-opening-id')\",\n    \"token\" : \"$input.params('Authorization')\"\n}"
          },
          "passthroughBehavior": "never",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws"
        }
      }
    },
    "/getrecommendations/{job-opening-id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "job-opening-id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "last",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "500": {
            "description": "500 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:503194767313:function:sandboxGetRecommendations/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            },
            "^\\[Server Error\\].*": {
              "statusCode": "500"
            }
          },
          "requestTemplates": {
            "application/json": "{\n    \"openingId\":\"$input.params('job-opening-id')\",\n    \"limit\": \"$input.params('limit')\",\n    \"last\" : \"$input.params('last')\"\n\n}"
          },
          "passthroughBehavior": "never",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws"
        }
      }
    },
    "/getstudent/{industry}/{student-id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "student-id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "industry",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "500": {
            "description": "500 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:503194767313:function:sandboxGetStudent/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            },
            "^\\[Server Error\\].*": {
              "statusCode": "500"
            }
          },
          "requestTemplates": {
            "application/json": "{\n    \"industry\" : \"$input.params('industry')\",\n    \"studentId\": \"$input.params('student-id')\"\n}"
          },
          "passthroughBehavior": "never",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws"
        }
      }
    },
    "/getstudents/{industry}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "last",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "industry",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "500": {
            "description": "500 response"
          }
        },
        "x-amazon-apigateway-request-validator": "Validate query string parameters and headers",
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:503194767313:function:sandboxGetStudents/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            },
            "^\\[Server Error\\].*": {
              "statusCode": "500"
            }
          },
          "requestTemplates": {
            "application/json": "{\n    \"industry\" : \"$input.params('industry')\",\n    \"limit\": \"$input.params('limit')\",\n    \"last\" : \"$input.params('last')\"\n}"
          },
          "passthroughBehavior": "never",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws"
        }
      }
    },
    "/ismatched/{requested-user-id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "requested-user-id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "500": {
            "description": "500 response"
          }
        },
        "x-amazon-apigateway-request-validator": "Validate query string parameters and headers",
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:503194767313:function:sandboxIsMatched/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            },
            "^\\[Server Error\\].*": {
              "statusCode": "500"
            }
          },
          "requestTemplates": {
            "application/json": "{\n    \"requestedUserId\": \"$input.params('requested-user-id')\",\n    \"token\" : \"$input.params('Authorization')\"\n}"
          },
          "passthroughBehavior": "never",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws"
        }
      }
    },
    "/login": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Access-Control-Allow-Origin",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "400 response"
          },
          "410": {
            "description": "410 response"
          },
          "500": {
            "description": "500 response"
          }
        },
        "x-amazon-apigateway-request-validator": "Validate query string parameters and headers",
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:503194767313:function:sandboxLogin/invocations",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            },
            "^\\[Server Error\\].*": {
              "statusCode": "500"
            },
            "^\\[Incorrect Password\\].*": {
              "statusCode": "410"
            },
            "^\\[Incorrect Username\\].*": {
              "statusCode": "400"
            }
          },
          "passthroughBehavior": "when_no_match",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws"
        }
      },
      "options": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/logout": {
      "post": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "500": {
            "description": "500 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:503194767313:function:sandboxLogout/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            },
            "^\\[Server Error\\].*": {
              "statusCode": "500"
            }
          },
          "passthroughBehavior": "when_no_match",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws"
        }
      }
    },
    "/postopening": {
      "post": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "500": {
            "description": "500 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:503194767313:function:sandboxPostOpening/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            },
            "^\\[Server Error\\].*": {
              "statusCode": "500"
            }
          },
          "passthroughBehavior": "when_no_match",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws"
        }
      }
    },
    "/recommendstudent": {
      "post": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "500": {
            "description": "500 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:503194767313:function:sandboxRecommendStudent/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            },
            "^\\[Server Error\\].*": {
              "statusCode": "500"
            }
          },
          "passthroughBehavior": "when_no_match",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws"
        }
      }
    },
    "/register/company": {
      "post": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "430": {
            "description": "430 response"
          },
          "500": {
            "description": "500 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:503194767313:function:sandboxRegisterCompany/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            },
            "^\\[Server Error\\].*": {
              "statusCode": "500"
            },
            "^\\[Username Already Taken\\].*": {
              "statusCode": "430"
            }
          },
          "passthroughBehavior": "when_no_match",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws"
        }
      }
    },
    "/register/mentor": {
      "post": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "430": {
            "description": "430 response"
          },
          "500": {
            "description": "500 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:503194767313:function:sandboxRegisterMentor/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            },
            "^\\[Server Error\\].*": {
              "statusCode": "500"
            },
            "^\\[Username Already Taken\\].*": {
              "statusCode": "430"
            }
          },
          "passthroughBehavior": "when_no_match",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws"
        }
      }
    },
    "/register/student": {
      "post": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "430": {
            "description": "430 response"
          },
          "500": {
            "description": "500 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:503194767313:function:sandboxRegisterStudent/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            },
            "^\\[Server Error\\].*": {
              "statusCode": "500"
            },
            "^\\[Username Already Taken\\].*": {
              "statusCode": "430"
            }
          },
          "passthroughBehavior": "when_no_match",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws"
        }
      }
    },
    "/requestmatch": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "500": {
            "description": "500 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:503194767313:function:sandboxRequestMatch/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            },
            "^\\[Server Error\\].*": {
              "statusCode": "500"
            }
          },
          "requestTemplates": {
            "application/json": "{\n    \"token\":\"$input.params('Authorization')\",\n    \"requestedUserId\":\"$input.path('$').requestedUserId\"\n}"
          },
          "passthroughBehavior": "never",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws"
        }
      }
    }
  },
  "definitions": {
    "Empty": {
      "type": "object",
      "title": "Empty Schema"
    }
  },
  "x-amazon-apigateway-request-validators": {
    "Validate query string parameters and headers": {
      "validateRequestParameters": true,
      "validateRequestBody": false
    },
    "Validate body, query string parameters, and headers": {
      "validateRequestParameters": true,
      "validateRequestBody": true
    }
  }
}